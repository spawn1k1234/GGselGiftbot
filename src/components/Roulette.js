import React, { useState, useEffect } from "react";
import { database, ref, get, update, set } from "../firebase"; // –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!

const rewards = [0, 2, 5, 10, 20, 25];

const Roulette = ({ userId }) => {
  const [spinning, setSpinning] = useState(false);
  const [result, setResult] = useState(null);
  const [coins, setCoins] = useState(0);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–Ω–µ—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (!userId) return; // –ï—Å–ª–∏ –Ω–µ—Ç userId, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å
    const fetchCoins = async () => {
      const userRef = ref(database, `users/${userId}`); // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const snapshot = await get(userRef); // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ –¥–∞–Ω–Ω—ã–µ
      if (snapshot.exists()) {
        const data = snapshot.val(); // –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø–æ–ª—É—á–∞–µ–º –∏—Ö
        setCoins(data.coins || 0); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–µ—Ç—ã
      } else {
        console.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.");
      }
    };
    fetchCoins(); // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
  }, [userId]); // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ userId

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä—É—á–µ–Ω–∏—è —Ä—É–ª–µ—Ç–∫–∏
  const spinRoulette = async () => {
    if (spinning || coins < 2) {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –∏–ª–∏ —Ä—É–ª–µ—Ç–∫–∞ —É–∂–µ –∫—Ä—É—Ç–∏—Ç—Å—è");
      return;
    }

    setSpinning(true); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫—Ä—É—Ç—è—â–µ–≥–æ—Å—è
    setResult(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç

    const prize = rewards[Math.floor(Math.random() * rewards.length)]; // –°–ª—É—á–∞–π–Ω—ã–π –ø—Ä–∏–∑

    setTimeout(async () => {
      const newCoins = coins - 2 + prize; // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç
      const timestamp = Date.now(); // –ë–µ—Ä–µ–º —Ç–µ–∫—É—â–∏–π timestamp

      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await update(ref(database, `users/${userId}`), {
        coins: newCoins,
      });

      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
      await set(ref(database, `users/${userId}/transactions/${timestamp}`), {
        amount: prize - 2,
        type: "roulette",
        result: prize,
        cost: 2,
        timestamp,
      });

      setCoins(newCoins); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–Ω–µ—Ç
      setResult(prize); // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      setSpinning(false); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–Ω–µ –∫—Ä—É—Ç–∏—Ç—Å—è"
    }, 2500); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –∫—Ä—É—á–µ–Ω–∏—è
  };

  return (
    <div style={{ textAlign: "center", padding: 20 }}>
      <h2>üé∞ –†—É–ª–µ—Ç–∫–∞</h2>
      <p>–ú–æ–Ω–µ—Ç—ã: {coins}</p>

      <button
        onClick={spinRoulette} // –ü—Ä–∏ –∫–ª–∏–∫–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ä—É–ª–µ—Ç–∫–∞
        disabled={spinning || coins < 2} // –ï—Å–ª–∏ –∫—Ä—É—Ç–∏—Ç—Å—è –∏–ª–∏ –º–æ–Ω–µ—Ç –º–µ–Ω—å—à–µ 2 - –∫–Ω–æ–ø–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞
        style={{
          padding: 15,
          background: "#4caf50",
          color: "white",
          border: "none",
          borderRadius: 10,
          fontSize: 18,
          cursor: spinning ? "not-allowed" : "pointer",
        }}
      >
        {spinning ? "–ö—Ä—É—Ç–∏—Ç—Å—è..." : "–ö—Ä—É—Ç–∏—Ç—å –∑–∞ 2 –º–æ–Ω–µ—Ç—ã"}
      </button>

      {result !== null && (
        <div style={{ marginTop: 20 }}>
          <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç: {result} –º–æ–Ω–µ—Ç</h3>
          {result === 0 ? (
            <p style={{ color: "#c62828" }}>–£–≤—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏ üòû</p>
          ) : (
            <p style={{ color: "#2e7d32" }}>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ</p>
          )}
        </div>
      )}
    </div>
  );
};

export default Roulette;
